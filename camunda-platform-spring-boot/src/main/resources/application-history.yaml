#  ###  There are a few options for configuring History Cleanup. All the options rely on the process engine configuration of some sort.
#
#  # See *_Option 3_* to use generic-properties which is what I think will work for your case. Included the other options just in case.
#
#  ##    1. You can utilize process.xml or camunda.cfg.xml as described here.
#  https://docs.camunda.org/manual/latest/user-guide/process-engine/process-engine-bootstrapping/#configure-process-engine-using-camunda-cfg-xml
#
#  ###    See the following for the config properties that can be set for history cleanup and other engine configuration properties.
#  https://docs.camunda.org/manual/latest/reference/deployment-descriptors/tags/process-engine/#history-cleanup-configuration-parameters
#
#  ##    2. or you can use code config as described here
#  https://docs.camunda.org/manual/latest/user-guide/spring-boot-integration/configuration/#adding-additional-configurations
#
#  ###    In the case of spring-boot you can utilize Component Scanning and @Value annotations to quickly create your own properties and hook this into a yaml config via a process-engine-plugin.
#
#  ##    3. use generic-properties
#  See https://docs.camunda.org/manual/latest/user-guide/spring-boot-integration/configuration/#generic-properties
#
#  ###  Here are the available configs for the process-engine-configuration
#  https://docs.camunda.org/manual/latest/reference/deployment-descriptors/tags/process-engine/#configuration-properties
#
#  ###    To use generic-properties just find the property in the configuration-properties doc above than add a hyphen "-" between words and remove camel case like ```historyCleanupStrategy``` becomes ```history-cleanup-strategy```.
#
#  ###    Also here are the additional spring-boot properties that you can use in YAML.
#  https://docs.camunda.org/manual/latest/user-guide/spring-boot-integration/configuration/#camunda-engine-properties


camunda:
  bpm:
    history-level: audit
#    history-level: custom-history-level
    generic-properties:
      properties:
        history-cleanup-strategy: removalTimeBased
    history:
      cleanup:
        historyCleanupBatchSize: 10
        historyCleanupBatchThreshold: 10